Please answer the below core-java Questions:

Q. What is programing language?
A. A programming language is a computer language that is used by programmers (developers) to communicate with computers.
   It is a set of instructions written in any specific language to perform a specific task.
   A programming language is mainly used to develop desktop applications, websites, and mobile applications.
------------------------------------------------------------------------------------------------------------------------
Q. What are the jdk components ? define each component?
A. JDK contains the following components:
   jConsole: This is a Java monitoring and management Console.
   jar: This is the archiver. This tool is used to package related class libraries into a single Jar file as well as to
        manage Jar files.
   jarSigner: This tool is used for jar signing and verifying.
   javap: This is a tool for class file disassembler.
   javaws: Java web start launcher for JNLP applications.
   jhat: Java heap analysis tool.
   jrunscript: Java command-line script shell.
   jstack: Utility used to print stack traces for Java threads.
   Javadoc: This automatically generates documentation from the source code comments.
   appletviewer: Used for applet execution and debugging without a web browser.
   apt: Annotation processing tool.
   extCheck: Utility used to check jar file conflicts.
   keytool: Using this utility you can manipulate Keystore.
   policytool: This is a policy creation and management tool.
   xjc: This is a part of the XML binding (JAXB) API that accepts XML schema and generates Java classes
------------------------------------------------------------------------------------------------------------------------
Q. What is an IDE?
A. An integrated development environment (IDE) is software for building applications that combines common developer
   tools into a single graphical user interface (GUI). An IDE typically consists of: Source code editor, Local build
   automation, and Debugger.
------------------------------------------------------------------------------------------------------------------------
Q. What are the IDEs available in the market to support java?
A. The IDE's available in the market to support Java are:
    Visual Studio
    IntelliJ IDEA
    Eclipse
    Xcode
    NetBeans
    AWS Cloud9
    Amazon Corretto
    Oracle JDeveloper
------------------------------------------------------------------------------------------------------------------------
Q. Explain the entire java life cycle.
A. The life cycle of a java program tells us what happens right from the point when we type source code in a text editor
   to the point that source code is converted into machine code (0’s and 1’s).
   There are three main stages in the life cycle of a java program. They are:
    Editing the program
    Compiling the source code
    Executing the byte code
   First, you will start with typing the program in a text editor (ex: notepad, notepad++, wordpad, textedit etc).
   After completing editing of the program, we have to save the file.
   While saving the file you should remember that the file must be saved with a .java extension. For example, let’s
   think that I had written a Java program which contains a single class Sample. It is a good convention to save the
   file with the name of the class. So, as per my example, the file will be saved as Sample.java.
   The second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code
   which is available in Sample.java.
   The output of the compiler is machine independent or platform independent code which is known as bytecode. The file
   which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.
   The last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
   Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local
   machine.
------------------------------------------------------------------------------------------------------------------------
Q. What is class?
A. A class in the context of Java is a template used to create objects and to define object data types and methods.
   Classes are categories, and objects are items within each category.
   All class objects should have the basic class properties.
   Core properties include the actual attributes/values and methods that may be used by the object.
------------------------------------------------------------------------------------------------------------------------
Q. What is object?
A. An object stores its state in fields (variables in some programming languages) and exposes its behavior through
   methods (functions in some programming languages). Methods operate on an object's internal state and serve as the
   primary mechanism for object-to-object communication.
------------------------------------------------------------------------------------------------------------------------
Q. What is the entry point of an application?
A. An application entry point identifies a resource that is an access point to an application. Application entry points
   are used to control users' access to different versions of an application that is deployed on a platform.
------------------------------------------------------------------------------------------------------------------------
Q. Why main method is static?
A. The main() method is static so that JVM can invoke it without instantiating the class. This also saves the
   unnecessary wastage of memory which would have been used by the object declared only for calling the main() method
   by the JVM.
------------------------------------------------------------------------------------------------------------------------
Q. Which class is the superclass of all classes in java?
A. The Object class, which is stored in the java. lang package, is the ultimate superclass of all Java classes
   (except for Object ). Also, arrays extend Object.
------------------------------------------------------------------------------------------------------------------------
Q. What is difference between path and classpath variables?
A. The main difference between PATH and CLASSPATH is that Path is set for java tools in java programs like java and
   javac, which are used to compile your code. Whereas CLASSPATH is used by System or Application class loader to locate
   and load compile Java bytecodes stored in the . class file
------------------------------------------------------------------------------------------------------------------------
Q. What is the difference between an Interface and Abstract class?
A. An abstract class allows you to create functionality that subclasses can implement or override. An interface only
   allows you to define functionality, not implement it. And whereas a class can extend only one abstract class, it can
   take advantage of multiple interfaces.
------------------------------------------------------------------------------------------------------------------------
Q. Can you make an Object from an Interface and Abstract class ? how do you use interface and abstract class?
A. There are two ways you can achieve this.
   1) Either you extend / implement the Abstract class / interface in a new class, create the object of this new class
   and then use this object as per your need.
   2) The Compiler allows you to create anonymous objects of the interfaces in your code. Hope this helps.
------------------------------------------------------------------------------------------------------------------------
Q. What is Access Specifier?
A. The public keyword is an access specifier. Access specifiers define how the members (attributes and methods) of a
   class can be accessed.
------------------------------------------------------------------------------------------------------------------------
Q. What is OOP ? Define each feature of java OOP.
A. The main ideas behind Java's Object-Oriented Programming, OOP concepts include abstraction, encapsulation,
   inheritance and polymorphism. Basically, Java OOP concepts let us create working methods and variables, then re-use
   all or part of them without compromising security.
   Inheritance: When one object acquires all the properties and behaviors of a parent object, it is known as inheritance.
   It provides code reusability. It is used to achieve runtime polymorphism.
   Polymorphism: If one task is performed in different ways, it is known as polymorphism. In Java, we use method
   overloading and method overriding to achieve polymorphism.
   Abstraction: Hiding internal details and showing functionality is known as abstraction. In Java, we use abstract
   class and interface to achieve abstraction.
   Encapsulation: Binding (or wrapping) code and data together into a single unit are known as encapsulation. A java
   class is the example of encapsulation. Java bean is the fully encapsulated class because all the data members are
   private here.
------------------------------------------------------------------------------------------------------------------------
Q. What is Java Package and which package is imported by default?
A. Java compiler imports java. lang package internally by default. It provides the fundamental classes that are
   necessary to design a basic Java program. The important classes are Object, which is the root of the class hierarchy,
   and Class, instances of which represent classes at run time.
------------------------------------------------------------------------------------------------------------------------
Q. What is API? Name list of API that you have used so far.
A. An API is defined as a specification of possible interactions with a software component. API stands for application
   programming interface, a concept that applies everywhere from command-line tools to enterprise Java code web apps.
   An API is a way to programmatically interact with a separate software component or resource.
------------------------------------------------------------------------------------------------------------------------
Q. Does java support multiple inheritance?
A. The Java programming language supports multiple inheritance of type, which is the ability of a class to implement
   more than one interface. An object can have multiple types: the type of its own class and the types of all the
   interfaces that the class implements.
------------------------------------------------------------------------------------------------------------------------
Q. What is method overloading and when it happens?
A. Overloading occurs when two or more methods in one class have the same method name but different parameters.
   Overriding occurs when two methods have the same method name and parameters. One of the methods is in the parent
   class, and the other is in the child class.
------------------------------------------------------------------------------------------------------------------------
Q. Explain exceptions in java and how to handle it?
A. The try-catch is the simplest method of handling exceptions. Put the code you want to run in the try block, and any
   Java exceptions that the code throws are caught by one or more catch blocks. This method will catch any type of Java
   exceptions that get thrown. This is the simplest mechanism for handling exceptions.
------------------------------------------------------------------------------------------------------------------------
Q. What is static keyword in java? How it has been used in variables, methods and classes?
A. In Java, static keyword is mainly used for memory management. It can be used with variables, methods, blocks and
   nested classes. It is a keyword which is used to share the same variable or method of a given class. Basically,
   static is used for a constant variable or a method that is same for every instance of a class.
------------------------------------------------------------------------------------------------------------------------
Q. What is final and how it has been used variables, methods and classes?
A. Java final keyword is a non-access specifier that is used to restrict a class, variable, and method. If we initialize
   a variable with the final keyword, then we cannot modify its value. If we declare a method as final, then it cannot
   be overridden by any subclasses.
------------------------------------------------------------------------------------------------------------------------
Q. What is final, finally and finalize?
A. Final is a keyword and is used as access modifier in Java. Finally is a block in Java used for Exception Handling.
   Finalize is a method in Java used for Garbage Collection. Application. Final in Java is used with variables, methods,
   and classes to set access permissions.
------------------------------------------------------------------------------------------------------------------------
Q. What is a constructor ?
A. A constructor in Java is a special method that is used to initialize objects. The constructor is called when an
   object of a class is created.
------------------------------------------------------------------------------------------------------------------------
Q. Can we have multiple constructors in a class?
A. A class can have multiple constructors that assign the fields in different ways. Sometimes it's beneficial to specify
   every aspect of an object's data by assigning parameters to the fields, but other times it might be appropriate to
   define only one or a few.
------------------------------------------------------------------------------------------------------------------------
Q. If we don't have a constructor declared, what is called during the object creation?
A. All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler
   automatically provides a no-argument constructor, called the default constructor.
------------------------------------------------------------------------------------------------------------------------
Q. What is "this" keyword in java ?
A. The this keyword refers to the current object in a method or constructor. The most common use of the this keyword is
   to eliminate the confusion between class attributes and parameters with the same name (because a class attribute is
   shadowed by a method or constructor parameter).
------------------------------------------------------------------------------------------------------------------------
Q. What is "super" keyword in java? How to use it?
A. The super keyword refers to superclass (parent) objects. It is used to call superclass methods, and to access the
   superclass constructor. The most common use of the super keyword is to eliminate the confusion between superclasses
   and subclasses that have methods with the same name.
------------------------------------------------------------------------------------------------------------------------
Q. What is JVM stand for?
A. Java Virtual Machine, or JVM, loads, verifies and executes Java bytecode. It is known as the interpreter or the core
   of Java programming language because it executes Java programming.
------------------------------------------------------------------------------------------------------------------------
Q. Is JVM platform independent?
A. Java is platform-independent but JVM is platform dependent
   In Java, the main point here is that the JVM depends on the operating system – so if you are running Mac OS X you
   will have a different JVM than if you are running Windows or some other operating system.
------------------------------------------------------------------------------------------------------------------------
Q. What version of java are you using?
A. Java Version 8.
------------------------------------------------------------------------------------------------------------------------
Q. What is JAR stand for?
A. JAR stands for Java ARchive. It's a file format based on the popular ZIP file format and is used for aggregating many
   files into one.
------------------------------------------------------------------------------------------------------------------------
Q. What is the difference between JDK and JVM?
A. JVM is Java Virtual Machine, the JVM actually runs Java bytecode. JDK is Java Developer Kit, the JDK is what you need
   to compile Java source code. JRE is Java Runtime Environment, is what you need to run a Java program and contains a
   JVM, among other things. JVM (Java Virtual Machine) is an abstract machine.
------------------------------------------------------------------------------------------------------------------------
Q. What is the difference between JVM and JRE?
A. JRE is an environment, in order to execute any Java program locally. JVM is where it's responsible for converting the
   Bytecode into machine specific code and makes java program write-once-run-anywhere.
------------------------------------------------------------------------------------------------------------------------
Q. What is compile time and run time?
A. Compile time is the period when the programming code (such as C#, Java, C, Python) is converted to the machine code
   (i.e. binary code). Runtime is the period of time when a program is running and generally occurs after compile time.
------------------------------------------------------------------------------------------------------------------------
Q. What is the difference between String, StringBuffer and StringBuilder?
A. String is immutable whereas StringBuffer and StringBuilder are mutable classes. StringBuffer is thread-safe and
   synchronized whereas StringBuilder is not. That's why StringBuilder is faster than StringBuffer.
------------------------------------------------------------------------------------------------------------------------
Q. What is Singleton class?
A. In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class)
   at a time.
------------------------------------------------------------------------------------------------------------------------
Q. What is the difference between while and do..while loop?
A. In a nutshell, the structure of a while loop is very similar to that of a do-while loop, but the main difference lies
   in the fact that the while loop evaluates the condition first before executing the statements whereas the do-while
   loop executes the statements first before evaluating the condition of the loop.
------------------------------------------------------------------------------------------------------------------------
Q. What is Enum?
A. An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables).
   To create an enum, use the enum keyword (instead of class or interface), and separate the constants with a comma.
------------------------------------------------------------------------------------------------------------------------
Q. What is Iterator?
A. An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet. It is called an
   "iterator" because "iterating" is the technical term for looping. To use an Iterator, you must import it from the
   java.util package.
------------------------------------------------------------------------------------------------------------------------
Q. Which one will take more memory, an int or Integer?
A. Int is a primitive data type and takes 32 bits(4 bytes) to store. On other hand Integer is an object which takes 128
   bits (16 bytes) to store its int value
------------------------------------------------------------------------------------------------------------------------
Q. What is JIT stands for?
A. The Just-In-Time (JIT) compiler is a component of the runtime environment that improves the performance of Java™
   applications by compiling bytecodes to native machine code at run time.
------------------------------------------------------------------------------------------------------------------------
Q. What is Recursion?
A. Recursion is the technique of making a function call itself. This technique provides a way to break complicated
   problems down into simple problems which are easier to solve.